// Top level rule is `document`.
document = { 
    SOI ~
    (paragraph? ~ newline_char)* ~ paragraph? ~
    EOI
} //-- the last paragraph? catches the last line

// basic unit
paragraph = {
    env_stmt |
    ( cmd_stmt | literal_group )*
}

//-- letters and numbers with no spaces, brackets are included separately to address options
literal_group      = { (char | "[" | "]")+ } 

//-- letters and numbers with spaces, and no brackets
opts = { "[" ~ opts_group? ~ "]" }
opts_group = { literal_group_opts* }
literal_group_opts = { char+ } 

// command statement
//-- no newlines allowed in a cmd body
cmd_stmt = { ctrl_character ~ (!("begin"|"end") ~ name) ~ opts? ~ ("{" ~ ( cmd_stmt | literal_group | ("{" ~ ( cmd_stmt | literal_group )* ~ "}") )* ~ "}")* }

// environments
env_stmt            = { ctrl_character ~ "begin" ~ opts? ~ "{" ~ PUSH(env_name) ~ "}" ~  ("{" ~ code_description ~ "}")? ~ env_content ~ ctrl_character ~ "end" ~ "{" ~ POP ~ "}" }
env_content         = { (paragraph? ~ newline_char)* }
env_name            = { name }
code_description    = { name }

// characters
name           = @{ (ASCII_ALPHA | "#" | "^") + } //-- used for command and environment names
COMMENT        = _{ "%" ~ (!newline_char ~ ANY)* ~ newline_char }
WHITESPACE     = _{ ( " " | "\t" ) }
newline_char   = _{"\n"}
ctrl_character = _{ "\\" }
char           = @{ ASCII_ALPHANUMERIC | punctuation | non_ascii }
punctuation    = {
    "," | "." | ";" | "'" | "’" | "\"" | "\\\\" | "!" | "*" | "+" |"?" | "/" | "(" | ")" | "|" | "<" | ">" | ":" | "=" | "-" | "_" | "—" | "&" | "@" | "$"
}
non_ascii      = { "é" | "è" | "ç" | "ô" | "ü" | "Ü" | "ñ" }